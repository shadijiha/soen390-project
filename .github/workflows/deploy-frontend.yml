name: Deploy Skillswipe Vercel

on:
  release:
    types:
      - published

  push:
    branches:
      - master
    paths: "skillswipe/**"

  workflow_dispatch:
    inputs:
      version:
        description: "Deployment version"
        required: true

concurrency:
  # For pull requests, cancel all currently-running jobs for this workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  # Force terminal colors. @see https://www.npmjs.com/package/colors
  FORCE_COLOR: 1
  GIT_COMMIT: ${{ github.sha }}

jobs:
  build:
    environment: production-frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 19.x
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: skillswipe/node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('skillswipe/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        working-directory: ./skillswipe
        run: npm ci --prefer-offline --no-audit

  deploy:
    environment: production-frontend
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 19.x
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: skillswipe/node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('skillswipe/package-lock.json') }}

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Set Env Vars on Vercel Project
        uses: dkershner6/vercel-set-env-action@v1
        with:
          token: ${{ secrets.VERCEL_TOKEN }}
          projectName: skilswipe # project name in Vercel
          envVariableKeys: BASE_URL,NEXT_PUBLIC_DEFAULT_PICTURE,NEXT_PUBLIC_PUSHER_APP_KEY,NEXT_PUBLIC_PUSHER_APP_CLUSTER
        env:
          BASE_URL: ${{ secrets.BASE_API_URL }}
          TARGET_BASE_URL: preview,development,production # comma delimited, one of [production, preview, development]
          TYPE_BASE_URL: plain # one of [plain, encrypted]
          NEXT_PUBLIC_DEFAULT_PICTURE: ${{ secrets.NEXT_PUBLIC_DEFAULT_PICTURE }}
          TARGET_NEXT_PUBLIC_DEFAULT_PICTURE: preview,development,production # comma delimited, one of [production, preview, development]
          TYPE_NEXT_PUBLIC_DEFAULT_PICTURE: plain # one of [plain, encrypted]
          NEXT_PUBLIC_PUSHER_APP_KEY: ${{ secrets.NEXT_PUBLIC_PUSHER_APP_KEY }}
          TARGET_NEXT_PUBLIC_PUSHER_APP_KEY: preview,development,production # comma delimited, one of [production, preview, development]
          TYPE_NEXT_PUBLIC_PUSHER_APP_KEY: plain # one of [plain, encrypted]
          NEXT_PUBLIC_PUSHER_APP_CLUSTER: ${{ secrets.NEXT_PUBLIC_PUSHER_APP_CLUSTER }}
          TARGET_NEXT_PUBLIC_PUSHER_APP_CLUSTER: preview,development,production # comma delimited, one of [production, preview, development]
          TYPE_NEXT_PUBLIC_PUSHER_APP_CLUSTER: plain # one of [plain, encrypted]

      - name: Deploy to Production
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          working-directory: ./skillswipe
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
          scope: ${{ secrets.VERCEL_ORG_ID }}
